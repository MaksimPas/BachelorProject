@*upcast IPagedList*@
@model IEnumerable<BachelorProject.Models.DepotRecord>

@using PagedList.Mvc;

@if (Model.Count() <= 0)
{
    <div class="text-center">
        <br />
        <p> Ingen data... </p>
    </div>
}
else
{ 
<table class="table table-striped table-responsive-md btn-table w-auto">
    <tr>
        <th>
            <div class="table_cell">
                @Ajax.ActionLink("ID", "UpdateIndex",
                        new
                        {
                            sortColumn = Html.DisplayNameFor(model => model.Id),
                            sortOrder = ViewBag.newSortOrderForId ?? "ASC",
                            searchParameter = ViewBag.searchParameter
                        },
                        new AjaxOptions
                        {
                            HttpMethod = "GET",
                            UpdateTargetId = "tableDiv"
                        })
                <i class="fa fa-fw fa-sort"></i>
            </div>
        </th>
        <th>
            <div class="table_cell">
                @Ajax.ActionLink("Navn", "UpdateIndex",
                        new
                        {
                            sortColumn = Html.DisplayNameFor(model => model.Equipment.NameAndType),
                            sortOrder = ViewBag.newSortOrderForNameAndType ?? "ASC",
                            searchParameter = ViewBag.searchParameter
                        },
                        new AjaxOptions
                        {
                            HttpMethod = "GET",
                            UpdateTargetId = "tableDiv"
                        })
                <i class="fa fa-fw fa-sort"></i>
            </div>
        </th>
        <th>
            <div class="table_cell">
                @Ajax.ActionLink("Opprettingsdato", "UpdateIndex",
                        new
                        {
                            sortColumn = Html.DisplayNameFor(model => model.DateOfRecord),
                            sortOrder = ViewBag.newSortOrderForDateOfRecord ?? "ASC",
                            searchParameter = ViewBag.searchParameter
                        },
                        new AjaxOptions
                        {
                            HttpMethod = "GET",
                            UpdateTargetId = "tableDiv"
                        })
                <i class="fa fa-fw fa-sort"></i>
            </div>
        </th>
        <th>
            <div class="table_cell">
                @Ajax.ActionLink("Utløpsdato", "UpdateIndex",
                        new
                        {
                            sortColumn = Html.DisplayNameFor(model => model.ExpirationDate),
                            sortOrder = ViewBag.newSortOrderForExpirationDate ?? "ASC",
                            searchParameter = ViewBag.searchParameter
                        },
                        new AjaxOptions
                        {
                            HttpMethod = "GET",
                            UpdateTargetId = "tableDiv"
                        })
                <i class="fa fa-fw fa-sort"></i>
            </div>
        </th>
        <th>
            <div class="table_cell">
                @Ajax.ActionLink("Anntall opprinnelig", "UpdateIndex",
                        new
                        {
                            sortColumn = Html.DisplayNameFor(model => model.QuantityOriginal),
                            sortOrder = ViewBag.newSortOrderForQuantityOriginal ?? "ASC",
                            searchParameter = ViewBag.searchParameter
                        },
                        new AjaxOptions
                        {
                            HttpMethod = "GET",
                            UpdateTargetId = "tableDiv"
                        })
                <i class="fa fa-fw fa-sort"></i>
            </div>
        </th>
        <th>
            <div class="table_cell">
                @Ajax.ActionLink("Antall igjen", "UpdateIndex",
                        new
                        {
                            sortColumn = Html.DisplayNameFor(model => model.QuantityLeft),
                            sortOrder = ViewBag.newSortOrderForQuantityLeft ?? "ASC",
                            searchParameter = ViewBag.searchParameter
                        },
                        new AjaxOptions
                        {
                            HttpMethod = "GET",
                            UpdateTargetId = "tableDiv"
                        })
                <i class="fa fa-fw fa-sort"></i>
            </div>
        </th>
        <th>
            <div class="table_cell">
                <span>Valg</span>
            </div>
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Equipment.NameAndType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateOfRecord)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ExpirationDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QuantityOriginal)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QuantityLeft)
            </td>
            <td>
                <button type="button" class="btn btn-primary btn-sm m-0" onclick="location.href='@Url.Action("Edit","DepotRecords",new { id = item.Id })'">Rediger</button>
                <button type="button" class="btn btn-info btn-sm m-0" onclick="location.href='@Url.Action("Details","DepotRecords",new { id = item.Id })'">Detaljer</button>
                <button type="button" class="btn btn-danger btn-sm m-0" onclick="location.href='@Url.Action("Delete","DepotRecords",new { id = item.Id })'">Slett</button>
            </td>
        </tr>
    }

</table>
    <br />

    var pagedList = Model as PagedList.IPagedList<BachelorProject.Models.DepotRecord>;
    <p>Side  @(pagedList.PageCount < pagedList.PageNumber ? 0 : pagedList.PageNumber) av @pagedList.PageCount </p>


    @Html.PagedListPager(pagedList,
                                 page => Url.Action("UpdateIndex", "DepotRecords",
                                    new
                                    {
                                        page,
                                        searchParameter = ViewBag.searchParameter,
                                        sortColumn = ViewBag.sortColumn,
                                        sortOrder = ViewBag.sortOrder
                                    }),
                                    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
                                    new AjaxOptions()
                                    {
                                        HttpMethod = "GET",
                                        UpdateTargetId = "tableDiv"
                                    }))
}
