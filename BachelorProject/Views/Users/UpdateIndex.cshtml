@*upcast IPagedList*@
@model IEnumerable<BachelorProject.Models.UserViewModel>
@using PagedList.Mvc;

@if (Model.Count() <= 0)
{
    <div class="text-center">
        <br />
        <p> Ingen data... </p>
    </div>
}
else
{
<table class="table table-striped table-responsive-md btn-table w-auto">
    <tr>
        <th>
            <div class="table_cell">
                @Ajax.ActionLink("Fornavn", "UpdateIndex",
                 new
                 {
                     sortColumn = Html.DisplayNameFor(model => model.FirstName),
                     sortOrder = ViewBag.newSortOrderForFirstName ?? "ASC",
                     searchParameter = ViewBag.searchParameter
                 },
                 new AjaxOptions
                 {
                     HttpMethod = "GET",
                     UpdateTargetId = "tableDiv"
                 })
                <i class="fa fa-fw fa-sort"></i>
            </div>
        </th>
        <th>
            <div class="table_cell">
                @Ajax.ActionLink("Etternavn", "UpdateIndex",
             new
             {
                 sortColumn = Html.DisplayNameFor(model => model.LastName),
                 sortOrder = ViewBag.newSortOrderForLastName ?? "ASC",
                 searchParameter = ViewBag.searchParameter
             },
             new AjaxOptions
             {
                 HttpMethod = "GET",
                 UpdateTargetId = "tableDiv"
             })
                <i class="fa fa-fw fa-sort"></i>
            </div>
        </th>
        <th>
            <div class="table_cell">
                @Ajax.ActionLink("E-post", "UpdateIndex",
             new
             {
                 sortColumn = Html.DisplayNameFor(model => model.Email),
                 sortOrder = ViewBag.newSortOrderForEmail ?? "ASC",
                 searchParameter = ViewBag.searchParameter
             },
             new AjaxOptions
             {
                 HttpMethod = "GET",
                 UpdateTargetId = "tableDiv"
             })
                <i class="fa fa-fw fa-sort"></i>
            </div>
        </th>
        <th>
            <div class="table_cell">
                @Ajax.ActionLink("Telefon", "UpdateIndex",
             new
             {
                 sortColumn = Html.DisplayNameFor(model => model.Phone),
                 sortOrder = ViewBag.newSortOrderForPhone ?? "ASC",
                 searchParameter = ViewBag.searchParameter
             },
             new AjaxOptions
             {
                 HttpMethod = "GET",
                 UpdateTargetId = "tableDiv"
             })
                <i class="fa fa-fw fa-sort"></i>
            </div>
        </th>
        <th>
            <div class="table_cell">
                @Ajax.ActionLink("Rolle", "UpdateIndex",
             new
             {
                 sortColumn = Html.DisplayNameFor(model => model.Role),
                 sortOrder = ViewBag.newSortOrderForRole ?? "ASC",
                 searchParameter = ViewBag.searchParameter
             },
             new AjaxOptions
             {
                 HttpMethod = "GET",
                 UpdateTargetId = "tableDiv"
             })
                <i class="fa fa-fw fa-sort"></i>
            </div>
        </th>
        <th>
            <div class="table_cell">
                @Ajax.ActionLink("Registreringsdato", "UpdateIndex",
             new
             {
                 sortColumn = Html.DisplayNameFor(model => model.DateOfRecord),
                 sortOrder = ViewBag.newSortOrderForRole ?? "ASC",
                 searchParameter = ViewBag.searchParameter
             },
             new AjaxOptions
             {
                 HttpMethod = "GET",
                 UpdateTargetId = "tableDiv"
             })
                <i class="fa fa-fw fa-sort"></i>
            </div>
        </th>
        <th>
            <div class="table_cell">
                <span>Valg</span>
            </div>
        </th>
    </tr>

    @foreach (var item in Model)
    {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.FirstName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.LastName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Email)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Phone)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Role)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.DateOfRecord)
    </td>
    <td>
        <button type="button" class="btn btn-primary btn-sm m-0" onclick="location.href='@Url.Action("Edit", "Users", new { id = item.UserId })'">Rediger</button>
        <button type="button" class="btn btn-info btn-sm m-0" onclick="location.href='@Url.Action("Details", "Users", new { id = item.UserId })'">Detaljer</button>
        <button type="button" class="btn btn-danger btn-sm m-0" onclick="location.href='@Url.Action("Delete", "Users", new { id = item.UserId })'">Slett</button>
    </td>
</tr>
    }
</table>
<br />

  var pagedList = Model as PagedList.IPagedList<BachelorProject.Models.UserViewModel>;

<p>Side  @(pagedList.PageCount < pagedList.PageNumber ? 0 : pagedList.PageNumber) av @pagedList.PageCount</p>


@Html.PagedListPager(pagedList,
                             page => Url.Action("UpdateIndex", "Users",
                             new
                             {
                                 page,
                                 searchParameter = ViewBag.searchParameter,
                                 sortColumn = ViewBag.sortColumn,
                                 sortOrder = ViewBag.sortOrder
                             }),
                             PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
                                new AjaxOptions()
                                {
                                    HttpMethod = "GET",
                                    UpdateTargetId = "tableDiv"
                                }))
    }
